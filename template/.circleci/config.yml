# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.6.1
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
        
      # run tests!
      # this example uses Django's built-in test-runner
      # other common Python testing frameworks include pytest and nose
      # https://pytest.org
      # https://nose.readthedocs.io
      # - run:
      #     name: run tests
      #     command: |
      #       . venv/bin/activate
      #       chmod 777 ./test
      # ./test
          
  publish:
    working_directory: ~/repo
    machine: true

    steps:
       - checkout
       - run: echo "publish"
      #  - run: cp -r ./getPlaylist.py ./test
       - run: docker login --username=maiff -p 2101239xwt 

       - run: docker build -t maiff/%%{ name }%%:latest -f Dockerfile .

       - run: docker push maiff/%%{ name }%%:latest
workflows:
  version: 2

  build_and_deploy:
    jobs:
      - build
      - publish:
          filters:
            branches:
              only:
                - master
          requires:
            - build